// Code generated by protoc-gen-go.
// source: github.com/kazouphq/crawler/srv/proto/crawler.proto
// DO NOT EDIT!

/*
Package go_micro_srv_crawler is a generated protocol buffer package.

It is generated from these files:
	github.com/kazouphq/crawler/srv/proto/crawler.proto

It has these top-level messages:
	StartRequest
	StartResponse
*/
package go_micro_srv_crawler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type StartRequest struct {
	Type   string            `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Config map[string]string `protobuf:"bytes,2,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *StartRequest) Reset()                    { *m = StartRequest{} }
func (m *StartRequest) String() string            { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()               {}
func (*StartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StartRequest) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type StartResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *StartResponse) Reset()                    { *m = StartResponse{} }
func (m *StartResponse) String() string            { return proto.CompactTextString(m) }
func (*StartResponse) ProtoMessage()               {}
func (*StartResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*StartRequest)(nil), "go.micro.srv.crawler.StartRequest")
	proto.RegisterType((*StartResponse)(nil), "go.micro.srv.crawler.StartResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Crawler service

type CrawlerClient interface {
	Start(ctx context.Context, in *StartRequest, opts ...client.CallOption) (*StartResponse, error)
}

type crawlerClient struct {
	c           client.Client
	serviceName string
}

func NewCrawlerClient(serviceName string, c client.Client) CrawlerClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.crawler"
	}
	return &crawlerClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *crawlerClient) Start(ctx context.Context, in *StartRequest, opts ...client.CallOption) (*StartResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Crawler.Start", in)
	out := new(StartResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Crawler service

type CrawlerHandler interface {
	Start(context.Context, *StartRequest, *StartResponse) error
}

func RegisterCrawlerHandler(s server.Server, hdlr CrawlerHandler) {
	s.Handle(s.NewHandler(&Crawler{hdlr}))
}

type Crawler struct {
	CrawlerHandler
}

func (h *Crawler) Start(ctx context.Context, in *StartRequest, out *StartResponse) error {
	return h.CrawlerHandler.Start(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x32, 0x4e, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x4e, 0xac, 0xca, 0x2f, 0x2d, 0xc8, 0x28, 0xd4,
	0x4f, 0x2e, 0x4a, 0x2c, 0xcf, 0x49, 0x2d, 0xd2, 0x2f, 0x2e, 0x2a, 0xd3, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x87, 0x89, 0xe8, 0x81, 0x79, 0x42, 0x22, 0xe9, 0xf9, 0x7a, 0xb9, 0x99, 0xc9, 0x45, 0xf9,
	0x7a, 0x40, 0x15, 0x7a, 0x50, 0x39, 0xa5, 0x6e, 0x46, 0x2e, 0x9e, 0xe0, 0x92, 0xc4, 0xa2, 0x92,
	0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x1e, 0x2e, 0x96, 0x92, 0xca, 0x82, 0x54, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0x4e, 0x21, 0x3b, 0x2e, 0xb6, 0xe4, 0xfc, 0xbc, 0xb4, 0xcc, 0x74, 0x09,
	0x26, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x3d, 0x3d, 0x6c, 0xa6, 0xe8, 0x21, 0x9b, 0xa0, 0xe7, 0x0c,
	0xd6, 0xe0, 0x9a, 0x57, 0x52, 0x54, 0x29, 0xa5, 0xcb, 0xc5, 0x8d, 0xc4, 0x15, 0xe2, 0xe6, 0x62,
	0xce, 0x4e, 0xad, 0x84, 0x9a, 0xcd, 0xcb, 0xc5, 0x5a, 0x96, 0x98, 0x53, 0x9a, 0x0a, 0x34, 0x1a,
	0xc8, 0xb5, 0x62, 0xb2, 0x60, 0x54, 0x92, 0xe7, 0xe2, 0x85, 0x1a, 0x55, 0x5c, 0x90, 0x9f, 0x57,
	0x9c, 0x2a, 0xc4, 0xc7, 0xc5, 0x56, 0x5c, 0x92, 0x58, 0x52, 0x5a, 0x0c, 0xd1, 0x63, 0x14, 0xcb,
	0xc5, 0xee, 0x0c, 0xb1, 0x53, 0x28, 0x88, 0x8b, 0x15, 0xac, 0x56, 0x48, 0x89, 0xb0, 0x9b, 0xa4,
	0x94, 0xf1, 0xaa, 0x81, 0x58, 0xa6, 0xc4, 0x90, 0xc4, 0x06, 0x0e, 0x2a, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x01, 0x4d, 0x9e, 0xd8, 0x61, 0x01, 0x00, 0x00,
}
